#!/usr/bin/perl

use strict;
use warnings;

my $user = $ENV{KEY} or die "ENV KEY must be set to make changes.\n";
my $r = "\x01"; # enable bit 2^(fileno STDIN)
die "$0: Commandline Execution Worked!\n" if !select $r, undef, undef, 0.2;
my $push_info = <STDIN>;
my ($old,$new,$ref) = $push_info =~ m{^(\w+) (\w+) ([\w/]+)} or die "$0: Invalid syntax!\n";
if ($ref) {
    my $ip = $ENV{SSH_CLIENT} =~ /^([\da-f\.:]+) /i ? $1 : "UNKNOWN";
    my $branch = ($ref =~ m{^refs/heads/(.+)} || $ref =~ m{.*/([^/]+)}) ? $1 : $ref;
    my $restrict_branch_users = {};
    my $conf = `git config --list`;
    while ($conf =~ s/^restrictbranch\.\Q$branch\E=(.+)$//m) {
        my $keys = $1;
        foreach my $key (split /,/, $keys) {
            $restrict_branch_users->{$key} = 1;
        }
    }
    if (%$restrict_branch_users and !$restrict_branch_users->{$user}) {
        die localtime().": [$user] git-server: [$ip] Unable to write to restricted branch [$branch]\n";
    }
    if ($old =~ /^0+$/) {
        print localtime().": [$user] git-server: [$ip] Creating new branch [$branch]\n";
    }
    elsif ($new =~ /^0+$/) {
        die localtime().": [$user] git-server: [$ip] You cannot delete branch [$branch]\n";
    }
    elsif (`git log $new -- 2>&1 | grep '^commit $old'`) {
        #print localtime().": [$user] git-server: [$ip] Pushing $new changes to [$branch] tip without --force\n";
    }
    else {
        die localtime().": [$user] git-server: [$ip] You cannot use 'git push --force' on branch [$branch] to rewrite history. You can try 'git pull --rebase' or 'git pull' to clean up your local repo first.\n";
    }
}
